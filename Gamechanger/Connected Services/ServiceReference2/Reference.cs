//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gamechanger.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insertdata", ReplyAction="http://tempuri.org/IService1/InsertdataResponse")]
        int Insertdata(int Gameid, int Kills, int Death);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insertdata", ReplyAction="http://tempuri.org/IService1/InsertdataResponse")]
        System.Threading.Tasks.Task<int> InsertdataAsync(int Gameid, int Kills, int Death);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getkills", ReplyAction="http://tempuri.org/IService1/GetkillsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Getkills(int Gameid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getkills", ReplyAction="http://tempuri.org/IService1/GetkillsResponse")]
        System.Threading.Tasks.Task<object[]> GetkillsAsync(int Gameid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getdeaths", ReplyAction="http://tempuri.org/IService1/GetdeathsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Getdeaths(int Gameid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getdeaths", ReplyAction="http://tempuri.org/IService1/GetdeathsResponse")]
        System.Threading.Tasks.Task<object[]> GetdeathsAsync(int Gameid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Addgame", ReplyAction="http://tempuri.org/IService1/AddgameResponse")]
        int Addgame(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Addgame", ReplyAction="http://tempuri.org/IService1/AddgameResponse")]
        System.Threading.Tasks.Task<int> AddgameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getgames", ReplyAction="http://tempuri.org/IService1/GetgamesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Getgames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getgames", ReplyAction="http://tempuri.org/IService1/GetgamesResponse")]
        System.Threading.Tasks.Task<object[]> GetgamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getgamesid", ReplyAction="http://tempuri.org/IService1/GetgamesidResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Getgamesid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getgamesid", ReplyAction="http://tempuri.org/IService1/GetgamesidResponse")]
        System.Threading.Tasks.Task<object[]> GetgamesidAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetIgn", ReplyAction="http://tempuri.org/IService1/GetIgnResponse")]
        int GetIgn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetIgn", ReplyAction="http://tempuri.org/IService1/GetIgnResponse")]
        System.Threading.Tasks.Task<int> GetIgnAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSteam", ReplyAction="http://tempuri.org/IService1/GetSteamResponse")]
        int GetSteam();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSteam", ReplyAction="http://tempuri.org/IService1/GetSteamResponse")]
        System.Threading.Tasks.Task<int> GetSteamAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Gamechanger.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Gamechanger.ServiceReference2.IService1>, Gamechanger.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insertdata(int Gameid, int Kills, int Death) {
            return base.Channel.Insertdata(Gameid, Kills, Death);
        }
        
        public System.Threading.Tasks.Task<int> InsertdataAsync(int Gameid, int Kills, int Death) {
            return base.Channel.InsertdataAsync(Gameid, Kills, Death);
        }
        
        public object[] Getkills(int Gameid) {
            return base.Channel.Getkills(Gameid);
        }
        
        public System.Threading.Tasks.Task<object[]> GetkillsAsync(int Gameid) {
            return base.Channel.GetkillsAsync(Gameid);
        }
        
        public object[] Getdeaths(int Gameid) {
            return base.Channel.Getdeaths(Gameid);
        }
        
        public System.Threading.Tasks.Task<object[]> GetdeathsAsync(int Gameid) {
            return base.Channel.GetdeathsAsync(Gameid);
        }
        
        public int Addgame(string name) {
            return base.Channel.Addgame(name);
        }
        
        public System.Threading.Tasks.Task<int> AddgameAsync(string name) {
            return base.Channel.AddgameAsync(name);
        }
        
        public object[] Getgames() {
            return base.Channel.Getgames();
        }
        
        public System.Threading.Tasks.Task<object[]> GetgamesAsync() {
            return base.Channel.GetgamesAsync();
        }
        
        public object[] Getgamesid() {
            return base.Channel.Getgamesid();
        }
        
        public System.Threading.Tasks.Task<object[]> GetgamesidAsync() {
            return base.Channel.GetgamesidAsync();
        }
        
        public int GetIgn() {
            return base.Channel.GetIgn();
        }
        
        public System.Threading.Tasks.Task<int> GetIgnAsync() {
            return base.Channel.GetIgnAsync();
        }
        
        public int GetSteam() {
            return base.Channel.GetSteam();
        }
        
        public System.Threading.Tasks.Task<int> GetSteamAsync() {
            return base.Channel.GetSteamAsync();
        }
    }
}
